{"remainingRequest":"C:\\Users\\lenovo\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\学习javascript\\附件\\201902JS\\正式课\\week10\\day4\\message\\Message.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\学习javascript\\附件\\201902JS\\正式课\\week10\\day4\\message\\Message.vue","mtime":1559186131989},{"path":"C:\\Users\\lenovo\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            messages:[]\r\n        }\r\n    },\r\n\r\n    mounted() { // 组件加载完毕后执行\r\n        this.id = 0;\r\n    },\r\n    methods: {\r\n        // 添加弹层\r\n        add(options) { // {message,duration,type}\r\n            let id = this.id++; // 保证id的唯一性\r\n            let layer = {...options,id};\r\n            // 往数组中添加一层\r\n            this.messages.push(layer);\r\n            layer.timer = setTimeout(()=>{\r\n                this.remove(layer);\r\n            },options.duration)\r\n        },\r\n        // 移除弹层\r\n        remove(layer) { \r\n            clearTimeout(layer.timer); // 清除定时器\r\n            // 过滤数据中的消息\r\n            this.messages.filter(m=> m.id !== layer.id)\r\n        }\r\n    },\r\n}\r\n",{"version":3,"sources":["Message.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Message.vue","sourceRoot":".","sourcesContent":["<template>\r\n    <div>\r\n        <div v-for=\"m in messages\" :key=\"m.id\">\r\n            {{m.message}}\r\n        </div>\r\n        \r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            messages:[]\r\n        }\r\n    },\r\n\r\n    mounted() { // 组件加载完毕后执行\r\n        this.id = 0;\r\n    },\r\n    methods: {\r\n        // 添加弹层\r\n        add(options) { // {message,duration,type}\r\n            let id = this.id++; // 保证id的唯一性\r\n            let layer = {...options,id};\r\n            // 往数组中添加一层\r\n            this.messages.push(layer);\r\n            layer.timer = setTimeout(()=>{\r\n                this.remove(layer);\r\n            },options.duration)\r\n        },\r\n        // 移除弹层\r\n        remove(layer) { \r\n            clearTimeout(layer.timer); // 清除定时器\r\n            // 过滤数据中的消息\r\n            this.messages.filter(m=> m.id !== layer.id)\r\n        }\r\n    },\r\n}\r\n</script>\r\n"]}]}